{% extends 'base.html.twig' %}

{% block title %}Dashboard{% endblock %}

{% block body %}
<h1>Dashboard et Statistiques</h1>

<!-- Section : Missions en cours -->
<div>
    <h2>Missions en cours</h2>
    <ul>
        {% for mission in missionsInProgress %}
            <li>{{ mission.title }} - {{ mission.status }}</li>
        {% endfor %}
    </ul>
</div>

<!-- Section : Héros disponibles -->
<div>
    <h2>Héros disponibles</h2>
    <ul>
        {% for hero in availableHeroes %}
            <li>{{ hero.name }}</li>
        {% endfor %}
    </ul>
</div>

<!-- Section : Héros indisponibles -->
<div>
    <h2>Héros indisponibles</h2>
    <ul>
        {% for hero in unavailableHeroes %}
            <li>{{ hero.name }}</li>
        {% endfor %}
    </ul>
</div>

<!-- Section : Statistiques des équipes -->
<div>
    <h2>Statistiques des équipes</h2>
    <canvas id="teamStatsChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('teamStatsChart').getContext('2d');
    const data = {
        labels: {{ teamStats|map(stat => stat.team)|json_encode()|raw }},
        datasets: [
            {
                label: 'Missions réussies',
                data: {{ teamStats|map(stat => stat.success)|json_encode()|raw }},
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1,
            },
            {
                label: 'Total Missions',
                data: {{ teamStats|map(stat => stat.total)|json_encode()|raw }},
                backgroundColor: 'rgba(255, 159, 64, 0.2)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 1,
            },
        ],
    };

    new Chart(ctx, {
        type: 'bar',
        data: data,
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                },
            },
        },
    });
</script>
{% endblock %}
